<!doctype html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>Music Man</title>
   <script src="vexflow-min.js"></script>
  <script src="jquery-2.1.0.min.js"></script>
  <link rel='stylesheet' href='music.css'
</head>
<body>

<h1>Music Man</h1>


<canvas id="myCanvas" width="550" height="100" style="border:1px solid #c3c3c3;">
Your browser does not support the HTML5 canvas tag.
</canvas>

<div class='note-input'>
  <form action="/" method="post">
      <label for="timesignature">Type the time signature (integers only please) </label>
      <input type="text" name="timesignature" id="timesignature"/>
      <br>
      <label for="note">Type the note you want to see on the stave! </label>
      <input type="text" name="note" id="note"/>
       <br>
      <label for="note2">Type the note you want to see on the stave! </label>
      <input type="text" name="note2" id="note2"/>
       <br>
      <label for="note3">Type the note you want to see on the stave! </label>
      <input type="text" name="note3" id="note3"/>
       <br>
      <label for="note4">Type the note you want to see on the stave! </label>
      <input type="text" name="note4" id="note4"/>
      <br>
       <input type="submit" value="Submit measure" />
  </form>
</div>

<script>

    var canvas = document.getElementById("myCanvas");
  var renderer = new Vex.Flow.Renderer(myCanvas,
    Vex.Flow.Renderer.Backends.CANVAS);

  var ctx = renderer.getContext();
  var stave = new Vex.Flow.Stave(10, 0, 500);
  stave.addClef("treble").setContext(ctx).draw();

  var mykey=<%= @note_array %>

  if (mykey==false) {
    alert("Not a valid note! Stick to A-G.")
  }

  // Create a voice in 4/4
  var voice = new Vex.Flow.Voice({
    num_beats: <%= @timesig %>,
    beat_value: <%= @timesig %>,
    resolution: Vex.Flow.RESOLUTION
  });

  <% unless !@note_array %>

    // Create the notes
    var notes = [
      // First note in measure
      new Vex.Flow.StaveNote({ keys: <% if (@note_array[0]).is_a?(String) %> <%= [@note_array[0]] %> <% else %> <%= @note_array[0] %> <% end %> , duration: "q" }),

  // Second note in measure
      new Vex.Flow.StaveNote({ keys: <% if (@note_array[1]).is_a?(String) %> <%= [@note_array[1]] %> <% else %> <%= @note_array[1] %> <% end %>, duration: "q" }),

      // Third note in measure
      new Vex.Flow.StaveNote({ keys: <% if (@note_array[2]).is_a?(String) %> <%= [@note_array[2]] %> <% else %> <%= @note_array[2] %> <% end %>, duration: "q" }),

      // Fourth note in measure
      new Vex.Flow.StaveNote({ keys: <% if (@note_array[3]).is_a?(String) %> <%= [@note_array[3]] %> <% else %> <%= @note_array[3] %> <% end %>, duration: "q" })
    ];

  <% end %>




  // Add notes to voice
  voice.addTickables(notes);

  // Format and justify the notes to 500 pixels
  var formatter = new Vex.Flow.Formatter().
    joinVoices([voice]).format([voice], 500);

  // Render voice
  voice.draw(ctx, stave);

</script>

</body>
</html>
