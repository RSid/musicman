<!doctype html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>Music Man</title>
   <script src="vexflow-min.js"></script>
  <script src="jquery-2.1.0.min.js"></script>
  <link rel='stylesheet' href='music.css'
</head>
<body>

<h1>Music Man</h1>


<canvas id="myCanvas" width="550" height="100" style="border:1px solid #c3c3c3;">
Your browser does not support the HTML5 canvas tag.
</canvas>

<div class='note-input'>
  <form action="/" method="post">
      <label for="numbeats">Type the number of beats in a measure (integers only please) </label>
      <input type="text" name="numbeats" id="numbeats"/>
      <br><br>
      <label for="notes">Type the notes you want to see on the stave, seperated by commas. <br>
      Defaults to notes; for chords include the word chord after the root note.
      Defaults to major chords; for minor chords inclue the word min after the root note.
      </label>
      <br>
      <input type="text" name="notes" id="notes"/>
      <br>
       <input type="submit" value="Submit measure" />
  </form>
</div>

<script>
$(function() {
  var canvas = document.getElementById("myCanvas");
  var renderer = new Vex.Flow.Renderer(myCanvas,
    Vex.Flow.Renderer.Backends.CANVAS);

  var ctx = renderer.getContext();
  var stave = new Vex.Flow.Stave(10, 0, 500);
  stave.addClef("treble").setContext(ctx).draw();

  var mykey=<%= @note_array %>

  if (mykey==false) {
    alert("Not a valid note! Stick to A-G.")
  }

  // Create a voice in 4/4
  var voice = new Vex.Flow.Voice({
    num_beats: <%= @numbeats %>,
    beat_value: 4,
    resolution: Vex.Flow.RESOLUTION
  });

  <% unless !@note_array %>

    var noteArray = <%= @note_array %>;

    // Create the notes
    var notes = [

    ];

    $.each(noteArray, function(index, note) {
      var newNote = new Vex.Flow.StaveNote({ keys: note , duration: "q" });
      notes.push(newNote);
    });

  <% end %>


  // Add notes to voice
  voice.addTickables(notes);

  // Format and justify the notes to 500 pixels
  var formatter = new Vex.Flow.Formatter().
    joinVoices([voice]).format([voice], 500);

  // Render voice
  voice.draw(ctx, stave);
});
</script>

</body>
</html>
